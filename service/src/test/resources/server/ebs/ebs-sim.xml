<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:int="http://www.springframework.org/schema/integration"
    xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/integration
    http://www.springframework.org/schema/integration/spring-integration.xsd
    http://www.springframework.org/schema/integration/xml
    http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
    http://www.springframework.org/schema/integration/ws
    http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd">

<!-- 	<int:channel id="dnsOutRequestPojoOutChannel"></int:channel> -->
<!-- 	<int:channel id="dnsOutRequestPojoInChannel"></int:channel> -->
	<int:channel id="ebsOutExceptionErrorChannel"></int:channel>
<!-- 	<int:channel id="headerEnricherIn"></int:channel> -->
<!-- 	<int:channel id="soapBodyToPojoInChannel"></int:channel> -->
<!-- 	<int:channel id="soapBodyToPojoOutChannel"></int:channel> -->

	<int:channel id="sendSearchSoapHeaderEnricherIn"></int:channel>
<!-- 	<int:channel id="dnsOutGetInfoInChannel"></int:channel> -->
<!-- 	<int:channel id="dnsOutGetInfoOutChannel" ></int:channel> -->
	
<!-- 		default-reply-channel="dnsOutRequestPojoInChannel"> -->
	<int:gateway id="ebsOutService" service-interface="org.mardep.ssrs.ebs.EbsOutService" error-channel="ebsOutExceptionErrorChannel" default-request-channel="headerEnricherIn">
	</int:gateway>

	<int:header-enricher input-channel="headerEnricherIn" output-channel="ebsOutRequestPojoOutChannel">
		<int:header name="from" 		value="fromEbsSim"/>
		<int:header name="requestDate"  expression="T(org.apache.commons.lang.time.DateFormatUtils).ISO_DATETIME_FORMAT.format(new java.util.Date())"/>
		
	</int:header-enricher>

	<bean id="logClientInterceptor" class="org.mardep.ssrs.ebs.LogClientInterceptor">
	</bean>

	<int-ws:outbound-gateway id="ebsOutboundGateway" request-channel="ebsOutRequestPojoOutChannel" interceptor="logClientInterceptor" header-mapper="ebsSoapHeaderMapper" 
		marshaller="ebsJaxb2MarshallerIn" message-sender="wsOutMessageSender" fault-message-resolver="soapFaultMessageResolver" 
		uri="http://locahost:8080/ssrs" >
	</int-ws:outbound-gateway>
	
	<bean id="soapFaultMessageResolver" class="org.springframework.ws.soap.client.core.SoapFaultMessageResolver">
	</bean>

	
	<bean id="wsOutMessageSender" class="org.springframework.ws.transport.http.HttpComponentsMessageSender">
    	<property name="connectionTimeout" value="5000"/>
    	<property name="readTimeout" value="5000"/>
<!--     	<property name="credentials"> -->
<!--     		<bean class="org.apache.http.auth.UsernamePasswordCredentials"> -->
<!--                     <constructor-arg value="${secs.dns.credentials.username:SECS}:${secs.dns.credentials.password:!bcd1234}"/> -->
<!--             </bean> -->
<!--     	</property> -->
    	<property name="httpClient" ref="ebsHttpClient"/>
    </bean>

	<bean id="ebsHttpClient" class="org.apache.http.impl.client.DefaultHttpClient">
		<constructor-arg>
			<bean class="org.apache.http.impl.conn.PoolingClientConnectionManager">
				<constructor-arg ref="ebsHttpsSchemaRegistry" />
			</bean>
		</constructor-arg>
	</bean>
	<bean id="ebsHttpsSchemaRegistry" class="org.apache.http.conn.scheme.SchemeRegistry">
		<property name="items">
			<map>
				<entry key="https">
					<bean class="org.apache.http.conn.scheme.Scheme">
						<constructor-arg value="https" />
						<constructor-arg value="8443" />
						<constructor-arg>
							<bean id="dnsSSLSocketFactory" class="org.apache.http.conn.ssl.SSLSocketFactory">
								<constructor-arg name="trustStrategy">
									<bean class="org.apache.http.conn.ssl.TrustSelfSignedStrategy" />
								</constructor-arg>
								<constructor-arg name="hostnameVerifier">
									<bean class="org.apache.http.conn.ssl.AllowAllHostnameVerifier" />
								</constructor-arg>
							</bean>
						</constructor-arg>
					</bean>
				</entry>
				<entry key="http">
					<bean class="org.apache.http.conn.scheme.Scheme">
						<constructor-arg value="http" />
						<constructor-arg value="80" />
						<constructor-arg>
							<bean class="org.apache.http.conn.scheme.PlainSocketFactory"/>
						</constructor-arg>
					</bean>
				</entry>
			</map>
		</property>
	</bean>

<!-- 	<int:service-activator input-channel="ebsOutExceptionErrorChannel" 		ref="outboundRequestResponseInterceptor" 	method="handleMessagingException"></int:service-activator> -->

	<bean id="removeDnsSoapHeadersInterceptor" class="org.springframework.ws.transport.http.HttpComponentsMessageSender.RemoveSoapHeadersInterceptor"/>
	
<!-- 	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> -->
<!--       <property name="targetObject"> -->
<!--         <ref bean="dnsHttpClient"/> -->
<!--       </property> -->
<!--       <property name="targetMethod"> -->
<!--         <value>addRequestInterceptor</value> -->
<!--       </property> -->
<!--       <property name="arguments"> -->
<!--          <list> -->
<!--            <ref bean="removeDnsSoapHeadersInterceptor"/> -->
<!--            <value>0</value> -->
<!--          </list> -->
<!--       </property> -->
<!--    </bean> -->

		
</beans>        